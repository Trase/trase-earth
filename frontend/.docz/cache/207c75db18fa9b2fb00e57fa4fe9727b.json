{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-widget/dashboard-widget.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-widget/dashboard-widget.component.jsx","mtime":1553790719495},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1553790719443},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'react-components/chart';\nimport Spinner from 'react-components/shared/shrinking-spinner/shrinking-spinner.component';\nimport DashboardWidgetLabel from 'react-components/dashboard-element/dashboard-widget/dashboard-widget-label.component';\nimport DashboardWidgetLegend from 'react-components/dashboard-element/dashboard-widget/dashboard-widget-legend/dashboard-widget-legend.component';\nimport DynamicSentenceWidget from 'react-components/dashboard-element/dashboard-widget/dynamic-sentence-widget';\nimport ErrorCatch from 'react-components/shared/error-catch.component';\nimport Text from 'react-components/shared/text';\nimport Heading from 'react-components/shared/heading';\nimport 'react-components/dashboard-element/dashboard-widget/dashboard-widget.scss';\n\nfunction DashboardWidget(props) {\n  var title = props.title,\n      loading = props.loading,\n      error = props.error,\n      data = props.data,\n      chartConfig = props.chartConfig;\n\n  var renderError = function renderError(errorMessage) {\n    return React.createElement(Text, {\n      color: \"white\",\n      weight: \"bold\",\n      variant: \"mono\",\n      size: \"lg\",\n      className: \"widget-centered\"\n    }, errorMessage);\n  };\n\n  var renderChart = function renderChart() {\n    if (chartConfig.type === 'sentence') {\n      return React.createElement(\"div\", {\n        className: \"dynamic-sentence-widget\"\n      }, React.createElement(DynamicSentenceWidget, {\n        data: data,\n        config: chartConfig\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(DashboardWidgetLegend, {\n      colors: chartConfig.colors\n    }), chartConfig.yAxisLabel && React.createElement(DashboardWidgetLabel, {\n      text: chartConfig.yAxisLabel.text,\n      suffix: chartConfig.yAxisLabel.suffix\n    }), React.createElement(Chart, {\n      className: \"widget-chart\",\n      data: data,\n      config: chartConfig\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"c-dashboard-widget\"\n  }, React.createElement(\"div\", {\n    className: \"widget-title-container\"\n  }, React.createElement(Heading, {\n    as: \"h3\",\n    color: \"white\"\n  }, title), React.createElement(\"div\", {\n    className: \"widget-actions\"\n  }, React.createElement(\"button\", {\n    type: \"button\"\n  }), React.createElement(\"button\", {\n    type: \"button\"\n  }), React.createElement(\"button\", {\n    type: \"button\"\n  }))), React.createElement(\"div\", {\n    className: \"widget-box\"\n  }, React.createElement(ErrorCatch, {\n    renderFallback: function renderFallback(err) {\n      return renderError(\"Error: \".concat(err.message));\n    }\n  }, error && renderError(\"Error: \".concat(error.statusText)), loading && React.createElement(\"div\", {\n    className: \"widget-spinner\"\n  }, React.createElement(Spinner, {\n    className: \"-large -white\"\n  })), data && data.length > 0 && chartConfig && renderChart())));\n}\n\nDashboardWidget.propTypes = {\n  error: PropTypes.any,\n  data: PropTypes.array,\n  title: PropTypes.string,\n  loading: PropTypes.bool,\n  chartConfig: PropTypes.object\n};\nvar _default = DashboardWidget;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DashboardWidget, \"DashboardWidget\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-widget/dashboard-widget.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-widget/dashboard-widget.component.jsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nDashboardWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DashboardWidget\",\n  \"props\": {\n    \"error\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"loading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"chartConfig\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-widget/dashboard-widget.component.jsx"],"names":["title","loading","error","data","chartConfig","props","renderError","renderChart","colors","suffix","err","DashboardWidget","PropTypes","object"],"mappings":";;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,KAAA,MAAA,wBAAA;AACA,OAAA,OAAA,MAAA,uEAAA;AACA,OAAA,oBAAA,MAAA,sFAAA;AACA,OAAA,qBAAA,MAAA,+GAAA;AACA,OAAA,qBAAA,MAAA,6EAAA;AACA,OAAA,UAAA,MAAA,+CAAA;AACA,OAAA,IAAA,MAAA,8BAAA;AACA,OAAA,OAAA,MAAA,iCAAA;AACA,OAAA,2EAAA;;AAEA,SAAA,eAAA,CAAA,KAAA,EAAgC;AAAA,MACtBA,KADsB,GACuBK,KADvB,CAAA,KAAA;AAAA,MACfJ,OADe,GACuBI,KADvB,CAAA,OAAA;AAAA,MACNH,KADM,GACuBG,KADvB,CAAA,KAAA;AAAA,MACCF,IADD,GACuBE,KADvB,CAAA,IAAA;AAAA,MACOD,WADP,GACuBC,KADvB,CAAA,WAAA;;AAG9B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,YAAA,EAAY;AAAA,WAC9B,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,KAAK,EAAX,OAAA;AAAoB,MAAA,MAAM,EAA1B,MAAA;AAAkC,MAAA,OAAO,EAAzC,MAAA;AAAiD,MAAA,IAAI,EAArD,IAAA;AAA2D,MAAA,SAAS,EAAC;AAArE,KAAA,EAD8B,YAC9B,CAD8B;AAAhC,GAAA;;AAMA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIH,WAAW,CAAXA,IAAAA,KAAJ,UAAA,EAAqC;AACnC,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AAAuB,QAAA,IAAI,EAA3B,IAAA;AAAmC,QAAA,MAAM,EAAEA;AAA3C,OAAA,CADF,CADF;AAKD;;AACD,WACE,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AAAuB,MAAA,MAAM,EAAEA,WAAW,CAACI;AAA3C,KAAA,CADF,EAEGJ,WAAW,CAAXA,UAAAA,IACC,KAAA,CAAA,aAAA,CAAA,oBAAA,EAAA;AACE,MAAA,IAAI,EAAEA,WAAW,CAAXA,UAAAA,CADR,IAAA;AAEE,MAAA,MAAM,EAAEA,WAAW,CAAXA,UAAAA,CAAuBK;AAFjC,KAAA,CAHJ,EAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAO,MAAA,SAAS,EAAhB,cAAA;AAAgC,MAAA,IAAI,EAApC,IAAA;AAA4C,MAAA,MAAM,EAAEL;AAApD,KAAA,CARF,CADF;AARF,GAAA;;AAsBA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,IAAA,EAAE,EAAX,IAAA;AAAiB,IAAA,KAAK,EAAC;AAAvB,GAAA,EADF,KACE,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,IAAI,EAAC;AAAb,GAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,IAAI,EAAC;AAAb,GAAA,CAFF,EAGE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,IAAI,EAAC;AAAb,GAAA,CAHF,CAJF,CADF,EAWE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,IAAA,cAAc,EAAE,SAAA,cAAA,CAAA,GAAA,EAAG;AAAA,aAAIE,WAAW,CAAA,UAAA,MAAA,CAAWI,GAAG,CAA7B,OAAe,CAAA,CAAf;AAAA;AAA/B,GAAA,EACGR,KAAK,IAAII,WAAW,CAAA,UAAA,MAAA,CAAWJ,KAAK,CADvC,UACuB,CAAA,CADvB,EAEGD,OAAO,IACN,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,IAAA,SAAS,EAAC;AAAnB,GAAA,CADF,CAHJ,EAOGE,IAAI,IAAIA,IAAI,CAAJA,MAAAA,GAARA,CAAAA,IAAAA,WAAAA,IAA0CI,WApBnD,EAaM,CADF,CAXF,CADF;AAyBD;;AAEDI,eAAe,CAAfA,SAAAA,GAA4B;AAC1BT,EAAAA,KAAK,EAAEU,SAAS,CADU,GAAA;AAE1BT,EAAAA,IAAI,EAAES,SAAS,CAFW,KAAA;AAG1BZ,EAAAA,KAAK,EAAEY,SAAS,CAHU,MAAA;AAI1BX,EAAAA,OAAO,EAAEW,SAAS,CAJQ,IAAA;AAK1BR,EAAAA,WAAW,EAAEQ,SAAS,CAACC;AALG,CAA5BF;eAQA,e;AAAA;;;;;;;;;;0BAlEA,e","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'react-components/chart';\nimport Spinner from 'react-components/shared/shrinking-spinner/shrinking-spinner.component';\nimport DashboardWidgetLabel from 'react-components/dashboard-element/dashboard-widget/dashboard-widget-label.component';\nimport DashboardWidgetLegend from 'react-components/dashboard-element/dashboard-widget/dashboard-widget-legend/dashboard-widget-legend.component';\nimport DynamicSentenceWidget from 'react-components/dashboard-element/dashboard-widget/dynamic-sentence-widget';\nimport ErrorCatch from 'react-components/shared/error-catch.component';\nimport Text from 'react-components/shared/text';\nimport Heading from 'react-components/shared/heading';\nimport 'react-components/dashboard-element/dashboard-widget/dashboard-widget.scss';\n\nfunction DashboardWidget(props) {\n  const { title, loading, error, data, chartConfig } = props;\n\n  const renderError = errorMessage => (\n    <Text color=\"white\" weight=\"bold\" variant=\"mono\" size=\"lg\" className=\"widget-centered\">\n      {errorMessage}\n    </Text>\n  );\n\n  const renderChart = () => {\n    if (chartConfig.type === 'sentence') {\n      return (\n        <div className=\"dynamic-sentence-widget\">\n          <DynamicSentenceWidget data={data} config={chartConfig} />\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <DashboardWidgetLegend colors={chartConfig.colors} />\n        {chartConfig.yAxisLabel && (\n          <DashboardWidgetLabel\n            text={chartConfig.yAxisLabel.text}\n            suffix={chartConfig.yAxisLabel.suffix}\n          />\n        )}\n        <Chart className=\"widget-chart\" data={data} config={chartConfig} />\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div className=\"c-dashboard-widget\">\n      <div className=\"widget-title-container\">\n        <Heading as=\"h3\" color=\"white\">\n          {title}\n        </Heading>\n        <div className=\"widget-actions\">\n          <button type=\"button\" />\n          <button type=\"button\" />\n          <button type=\"button\" />\n        </div>\n      </div>\n      <div className=\"widget-box\">\n        <ErrorCatch renderFallback={err => renderError(`Error: ${err.message}`)}>\n          {error && renderError(`Error: ${error.statusText}`)}\n          {loading && (\n            <div className=\"widget-spinner\">\n              <Spinner className=\"-large -white\" />\n            </div>\n          )}\n          {data && data.length > 0 && chartConfig && renderChart()}\n        </ErrorCatch>\n      </div>\n    </div>\n  );\n}\n\nDashboardWidget.propTypes = {\n  error: PropTypes.any,\n  data: PropTypes.array,\n  title: PropTypes.string,\n  loading: PropTypes.bool,\n  chartConfig: PropTypes.object\n};\n\nexport default DashboardWidget;\n"]}]}