{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/chart/x-axis.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/chart/x-axis.component.jsx","mtime":1553790719470},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1553790719443},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Label, XAxis } from 'recharts';\nimport PropTypes from 'prop-types';\nimport findMaxValue from 'utils/findChartMaxValue';\nimport ChartTick from 'react-components/chart/tick/tick.component';\nimport { format } from 'd3-format';\nimport 'react-components/chart/chart-styles.scss';\n\nfunction CustomXAxis(_ref) {\n  var config = _ref.config,\n      data = _ref.data;\n  var xKey = config.xKey,\n      xKeys = config.xKeys,\n      xAxis = config.xAxis,\n      layout = config.layout,\n      unit = config.unit,\n      unitFormat = config.unitFormat;\n  if (!xAxis) return null; // horizontal charts\n\n  if (layout === 'vertical') {\n    var maxXValue = findMaxValue(data, xKeys);\n    return React.createElement(XAxis, _extends({\n      axisLine: false,\n      tickLine: false,\n      tickMargin: 10\n    }, xAxis, {\n      tick: React.createElement(ChartTick, {\n        dataMax: maxXValue,\n        unitFormat: unitFormat || function (value) {\n          return format('.2s')(value);\n        },\n        unit: unit,\n        backgroundColor: \"transparent\",\n        fill: \"white\"\n      })\n    }), React.createElement(Label, {\n      position: \"insideBottom\",\n      offset: -15,\n      className: \"x-axis-label\"\n    }, unit));\n  }\n\n  return React.createElement(XAxis, _extends({\n    dataKey: xKey || '',\n    tick: {\n      fontSize: 12\n    }\n  }, xAxis));\n}\n\nCustomXAxis.propTypes = {\n  config: PropTypes.object.isRequired,\n  data: PropTypes.array\n};\nvar _default = CustomXAxis;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_extends, \"_extends\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/chart/x-axis.component.jsx\");\n  reactHotLoader.register(CustomXAxis, \"CustomXAxis\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/chart/x-axis.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/chart/x-axis.component.jsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nCustomXAxis.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CustomXAxis\",\n  \"props\": {\n    \"config\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"data\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/chart/x-axis.component.jsx"],"names":["config","data","xKey","xKeys","xAxis","layout","unit","unitFormat","maxXValue","findMaxValue","format","fontSize","CustomXAxis","PropTypes","array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,KAAA,EAAA,KAAA,QAAA,UAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,YAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,4CAAA;AACA,SAAA,MAAA,QAAA,WAAA;AACA,OAAA,0CAAA;;AAEA,SAAA,WAAA,CAAA,IAAA,EAAuC;AAAA,MAAhBA,MAAgB,GAAA,IAAA,CAAhBA,MAAgB;AAAA,MAARC,IAAQ,GAAA,IAAA,CAARA,IAAQ;AAAA,MAC7BC,IAD6B,GACoBF,MADpB,CAAA,IAAA;AAAA,MACvBG,KADuB,GACoBH,MADpB,CAAA,KAAA;AAAA,MAChBI,KADgB,GACoBJ,MADpB,CAAA,KAAA;AAAA,MACTK,MADS,GACoBL,MADpB,CAAA,MAAA;AAAA,MACDM,IADC,GACoBN,MADpB,CAAA,IAAA;AAAA,MACKO,UADL,GACoBP,MADpB,CAAA,UAAA;AAErC,MAAI,CAAJ,KAAA,EAAY,OAFyB,IAEzB,CAFyB,CAGrC;;AACA,MAAIK,MAAM,KAAV,UAAA,EAA2B;AACzB,QAAMG,SAAS,GAAGC,YAAY,CAAA,IAAA,EAA9B,KAA8B,CAA9B;AACA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,MAAA,QAAQ,EADV,KAAA;AAEE,MAAA,QAAQ,EAFV,KAAA;AAGE,MAAA,UAAU,EAAE;AAHd,KAAA,EAAA,KAAA,EAAA;AAKE,MAAA,IAAI,EACF,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AACE,QAAA,OAAO,EADT,SAAA;AAEE,QAAA,UAAU,EAAEF,UAAU,IAAK,UAAA,KAAA,EAAK;AAAA,iBAAIG,MAAM,CAANA,KAAM,CAANA,CAAJ,KAAIA,CAAJ;AAFlC,SAAA;AAGE,QAAA,IAAI,EAHN,IAAA;AAIE,QAAA,eAAe,EAJjB,aAAA;AAKE,QAAA,IAAI,EAAC;AALP,OAAA;AANJ,KAAA,CAAA,EAeE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAO,MAAA,QAAQ,EAAf,cAAA;AAA+B,MAAA,MAAM,EAAE,CAAvC,EAAA;AAA4C,MAAA,SAAS,EAAC;AAAtD,KAAA,EAhBJ,IAgBI,CAfF,CADF;AAqBD;;AAED,SAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAO,IAAA,OAAO,EAAER,IAAI,IAApB,EAAA;AAA4B,IAAA,IAAI,EAAE;AAAES,MAAAA,QAAQ,EAAE;AAAZ;AAAlC,GAAA,EAAP,KAAO,CAAA,CAAP;AACD;;AAEDC,WAAW,CAAXA,SAAAA,GAAwB;AACtBZ,EAAAA,MAAM,EAAEa,SAAS,CAATA,MAAAA,CADc,UAAA;AAEtBZ,EAAAA,IAAI,EAAEY,SAAS,CAACC;AAFM,CAAxBF;eAKA,W;AAAA;;;;;;;;;;;0BArCA,W","sourcesContent":["import React from 'react';\nimport { Label, XAxis } from 'recharts';\nimport PropTypes from 'prop-types';\nimport findMaxValue from 'utils/findChartMaxValue';\nimport ChartTick from 'react-components/chart/tick/tick.component';\nimport { format } from 'd3-format';\nimport 'react-components/chart/chart-styles.scss';\n\nfunction CustomXAxis({ config, data }) {\n  const { xKey, xKeys, xAxis, layout, unit, unitFormat } = config;\n  if (!xAxis) return null;\n  // horizontal charts\n  if (layout === 'vertical') {\n    const maxXValue = findMaxValue(data, xKeys);\n    return (\n      <XAxis\n        axisLine={false}\n        tickLine={false}\n        tickMargin={10}\n        {...xAxis}\n        tick={\n          <ChartTick\n            dataMax={maxXValue}\n            unitFormat={unitFormat || (value => format('.2s')(value))}\n            unit={unit}\n            backgroundColor=\"transparent\"\n            fill=\"white\"\n          />\n        }\n      >\n        <Label position=\"insideBottom\" offset={-15} className=\"x-axis-label\">\n          {unit}\n        </Label>\n      </XAxis>\n    );\n  }\n\n  return <XAxis dataKey={xKey || ''} tick={{ fontSize: 12 }} {...xAxis} />;\n}\n\nCustomXAxis.propTypes = {\n  config: PropTypes.object.isRequired,\n  data: PropTypes.array\n};\n\nexport default CustomXAxis;\n"]}]}