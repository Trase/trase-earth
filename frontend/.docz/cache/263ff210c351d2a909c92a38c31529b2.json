{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/highlight-text-fragments.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/highlight-text-fragments.component.jsx","mtime":1550685018222},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1553790719443},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport { findAll } from 'highlight-words-core';\n\nfunction HighlightTextFragments(_ref) {\n  var text = _ref.text,\n      highlight = _ref.highlight;\n  return findAll({\n    searchWords: [highlight],\n    textToHighlight: text\n  }).map(function (chunk) {\n    var segmentStr = text.substr(chunk.start, chunk.end - chunk.start);\n    return chunk.highlight ? React.createElement(\"mark\", {\n      key: \"marked_\".concat(segmentStr, \"_\").concat(text, \"_\").concat(chunk.start)\n    }, segmentStr) : React.createElement(\"span\", {\n      key: \"clean\".concat(segmentStr, \"_\").concat(text, \"_\").concat(chunk.start)\n    }, segmentStr);\n  });\n}\n\nvar _default = HighlightTextFragments;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(HighlightTextFragments, \"HighlightTextFragments\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/highlight-text-fragments.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/highlight-text-fragments.component.jsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/highlight-text-fragments.component.jsx"],"names":["text","highlight","searchWords","textToHighlight","segmentStr","chunk"],"mappings":";;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,OAAA,QAAA,sBAAA;;AAEA,SAAA,sBAAA,CAAA,IAAA,EAAqD;AAAA,MAAnBA,IAAmB,GAAA,IAAA,CAAnBA,IAAmB;AAAA,MAAbC,SAAa,GAAA,IAAA,CAAbA,SAAa;AACnD,SAAO,OAAO,CAAC;AACbC,IAAAA,WAAW,EAAE,CADA,SACA,CADA;AAEbC,IAAAA,eAAe,EAAEH;AAFJ,GAAD,CAAP,CAAA,GAAA,CAGA,UAAA,KAAA,EAAS;AACd,QAAMI,UAAU,GAAGJ,IAAI,CAAJA,MAAAA,CAAYK,KAAK,CAAjBL,KAAAA,EAAyBK,KAAK,CAALA,GAAAA,GAAYA,KAAK,CAA7D,KAAmBL,CAAnB;AACA,WAAOK,KAAK,CAALA,SAAAA,GACL,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,GAAG,EAAA,UAAA,MAAA,CAAA,UAAA,EAAA,GAAA,EAAA,MAAA,CAAA,IAAA,EAAA,GAAA,EAAA,MAAA,CAAkCA,KAAK,CAAvC,KAAA;AAAT,KAAA,EADKA,UACL,CADKA,GAGL,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,GAAG,EAAA,QAAA,MAAA,CAAA,UAAA,EAAA,GAAA,EAAA,MAAA,CAAA,IAAA,EAAA,GAAA,EAAA,MAAA,CAAgCA,KAAK,CAArC,KAAA;AAAT,KAAA,EAHF,UAGE,CAHF;AALF,GAAO,CAAP;AAWD;;eAED,sB;AAAA;;;;;;;;;;0BAdA,sB","sourcesContent":["import React from 'react';\nimport { findAll } from 'highlight-words-core';\n\nfunction HighlightTextFragments({ text, highlight }) {\n  return findAll({\n    searchWords: [highlight],\n    textToHighlight: text\n  }).map(chunk => {\n    const segmentStr = text.substr(chunk.start, chunk.end - chunk.start);\n    return chunk.highlight ? (\n      <mark key={`marked_${segmentStr}_${text}_${chunk.start}`}>{segmentStr}</mark>\n    ) : (\n      <span key={`clean${segmentStr}_${text}_${chunk.start}`}>{segmentStr}</span>\n    );\n  });\n}\n\nexport default HighlightTextFragments;\n"]}]}