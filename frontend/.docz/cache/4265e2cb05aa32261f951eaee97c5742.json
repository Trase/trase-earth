{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/docs/dropdown.mdx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/docs/dropdown.mdx","mtime":1553620272251},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/docs/dropdown.mdx\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { PropsTable, Playground } from 'docz';\nimport { State } from 'react-powerplug';\nimport Dropdown, { Context } from 'react-components/shared/dropdown';\nimport Button from 'react-components/shared/button/button.component';\nimport 'styles/_docz.scss';\nvar layoutProps = {};\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"dropdown\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Dropdown\"), React.createElement(\"div\", {\n        className: \"components-container -spaced -width-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(State, {\n        initial: {\n          options: [{\n            label: 'Blue',\n            value: 'blue'\n          }, {\n            label: 'Red',\n            value: 'red'\n          }, {\n            label: 'Green',\n            value: 'green'\n          }],\n          value: {\n            label: 'Red',\n            value: 'red'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, function (_ref) {\n        var state = _ref.state,\n            setState = _ref.setState;\n        return React.createElement(Dropdown, {\n          label: \"colors\",\n          options: state.options,\n          value: state.value,\n          onChange: function onChange(value) {\n            return setState({\n              value: value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      })), React.createElement(MDXTag, {\n        name: \"h4\",\n        components: components,\n        props: {\n          \"id\": \"dropdown-with-variantsentence\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Dropdown with variant=\\\"sentence\\\"\"), React.createElement(\"div\", {\n        className: \"components-container -spaced -width-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(State, {\n        initial: {\n          options: [{\n            label: 'Blue',\n            value: 'blue'\n          }, {\n            label: 'Red',\n            value: 'red'\n          }, {\n            label: 'Green',\n            value: 'green'\n          }],\n          value: {\n            label: 'Red',\n            value: 'red'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, function (_ref2) {\n        var state = _ref2.state,\n            setState = _ref2.setState;\n        return React.createElement(Dropdown, {\n          variant: \"sentence\",\n          options: state.options,\n          value: state.value,\n          onChange: function onChange(value) {\n            return setState({\n              value: value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      })), React.createElement(MDXTag, {\n        name: \"h4\",\n        components: components,\n        props: {\n          \"id\": \"with-caret-arrowtype-and-placement\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"With 'caret' arrowType and placement\"), React.createElement(\"div\", {\n        className: \"components-container -spaced -width-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(State, {\n        initial: {\n          options: [{\n            label: 'Blue',\n            value: 'blue'\n          }, {\n            label: 'Red',\n            value: 'red'\n          }, {\n            label: 'Green',\n            value: 'green'\n          }],\n          value: {\n            label: 'Red',\n            value: 'red'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, function (_ref3) {\n        var state = _ref3.state,\n            setState = _ref3.setState;\n        return React.createElement(Dropdown, {\n          label: \"colors\",\n          options: state.options,\n          value: state.value,\n          onChange: function onChange(value) {\n            return setState({\n              value: value\n            });\n          },\n          arrowType: \"caret\",\n          placement: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      })), React.createElement(MDXTag, {\n        name: \"h4\",\n        components: components,\n        props: {\n          \"id\": \"with-icon-prop-in-the-options\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"With icon prop in the options\"), React.createElement(\"div\", {\n        className: \"components-container -spaced -width-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(State, {\n        initial: {\n          options: [{\n            label: 'Blue',\n            value: 'blue',\n            icon: 'close'\n          }, {\n            label: 'Red',\n            value: 'red',\n            icon: 'close'\n          }, {\n            label: 'Green',\n            value: 'green',\n            icon: 'close'\n          }],\n          value: {\n            label: 'Red',\n            value: 'red',\n            icon: 'close'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, function (_ref4) {\n        var state = _ref4.state,\n            setState = _ref4.setState;\n        return React.createElement(Dropdown, {\n          label: \"colors\",\n          options: state.options,\n          value: state.value,\n          onChange: function onChange(value) {\n            return setState({\n              value: value\n            });\n          },\n          arrowType: \"caret\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      })), React.createElement(MDXTag, {\n        name: \"h4\",\n        components: components,\n        props: {\n          \"id\": \"fitcontent-prop-to-adjust-to-selected-content-length\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"fitContent prop to adjust to selected content length\"), React.createElement(\"div\", {\n        className: \"components-container -spaced\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(State, {\n        initial: {\n          options: [{\n            label: 'Blue',\n            value: 'blue'\n          }, {\n            label: 'Red',\n            value: 'red'\n          }, {\n            label: 'Green',\n            value: 'green'\n          }],\n          value: {\n            label: 'Red',\n            value: 'red'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, function (_ref5) {\n        var state = _ref5.state,\n            setState = _ref5.setState;\n        return React.createElement(Dropdown, {\n          label: \"colors\",\n          options: state.options,\n          value: state.value,\n          onChange: function onChange(value) {\n            return setState({\n              value: value\n            });\n          },\n          arrowType: \"caret\",\n          fitContent: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      })), React.createElement(MDXTag, {\n        name: \"h4\",\n        components: components,\n        props: {\n          \"id\": \"only-view-dropdown\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Only view dropdown\"), React.createElement(\"div\", {\n        className: \"components-container -spaced\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(State, {\n        initial: {\n          options: [{\n            label: 'Blue',\n            value: 'blue'\n          }, {\n            label: 'Red',\n            value: 'red'\n          }, {\n            label: 'Green',\n            value: 'green'\n          }],\n          value: {\n            label: 'Red',\n            value: 'red'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, function (_ref6) {\n        var state = _ref6.state,\n            setState = _ref6.setState;\n        return React.createElement(Dropdown, {\n          label: \"colors\",\n          options: state.options,\n          value: state.value,\n          onChange: function onChange(value) {\n            return setState({\n              value: value\n            });\n          },\n          fitContent: true,\n          selectedValueOverride: \"\".concat(state.options.length, \" items\"),\n          showSelected: true,\n          readOnly: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        });\n      })), React.createElement(MDXTag, {\n        name: \"h4\",\n        components: components,\n        props: {\n          \"id\": \"with-children\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"With children\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Alternatively, the dropdown can accept a child component to render instead of a list of options.\\nThis cover more advanced use cases, where the content of the dropdown needs to be different. The dropdown exposes the options API via React Context.\"), React.createElement(MDXTag, {\n        name: \"blockquote\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        parentName: \"blockquote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"The available props via Context are: \", React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"selectedItem, getItemProps, highlightedIndex, toggleMenu\"), \".\")), React.createElement(\"div\", {\n        className: \"components-container -spaced -width-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        initialValue: {\n          value: 0,\n          label: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Context.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, function (_ref7) {\n        var toggleMenu = _ref7.toggleMenu,\n            getItemProps = _ref7.getItemProps,\n            selectedItem = _ref7.selectedItem;\n\n        var _getItemProps = getItemProps({\n          item: {\n            value: selectedItem.value + 1,\n            label: selectedItem.value + 1\n          }\n        }),\n            onClick = _getItemProps.onClick;\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"charcoal\",\n          size: \"sm\",\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"Add one\"), React.createElement(Button, {\n          color: \"gray\",\n          size: \"sm\",\n          onClick: function onClick() {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"No-Op\"), React.createElement(Button, {\n          color: \"pink\",\n          size: \"sm\",\n          onClick: toggleMenu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"Close\"));\n      })))), React.createElement(PropsTable, {\n        of: Dropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Playground, {\n        __position: 8,\n        __code: '<div className=\\\"components-container -spaced -width-200\\\">\\n  <State\\n    initial={{\\n      options: [\\n        { label: \\'Blue\\', value: \\'blue\\' },\\n        { label: \\'Red\\', value: \\'red\\' },\\n        { label: \\'Green\\', value: \\'green\\' },\\n      ],\\n      value: { label: \\'Red\\', value: \\'red\\' },\\n    }}\\n  >\\n    {({ state, setState }) => (\\n      <Dropdown\\n        label=\\\"colors\\\"\\n        options={state.options}\\n        value={state.value}\\n        onChange={value => setState({ value })}\\n      />\\n    )}\\n  </State>\\n</div>\\n\\n<div className=\\\"components-container -spaced -width-200\\\">\\n  <Dropdown initialValue={{ value: 0, label: 0 }}>\\n    <div>\\n      <Context.Consumer>\\n        {({ toggleMenu, getItemProps, selectedItem }) => {\\n          const { onClick } = getItemProps({\\n            item: {\\n              value: selectedItem.value + 1,\\n              label: selectedItem.value + 1,\\n            },\\n          })\\n          return (\\n            <div>\\n              <Button color=\\\"charcoal\\\" size=\\\"sm\\\" onClick={onClick}>\\n                Add one\\n              </Button>\\n              <Button color=\\\"gray\\\" size=\\\"sm\\\" onClick={() => {}}>\\n                No-Op\\n              </Button>\\n              <Button color=\\\"pink\\\" size=\\\"sm\\\" onClick={toggleMenu}>\\n                Close\\n              </Button>\\n            </div>\\n          )\\n        }}\\n      </Context.Consumer>\\n    </div>\\n  </Dropdown>\\n</div>',\n        __scope: {\n          props: this ? this.props : props,\n          State: State,\n          Dropdown: Dropdown,\n          Context: Context,\n          Button: Button\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"components-container -spaced -width-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(State, {\n        initial: {\n          options: [{\n            label: 'Blue',\n            value: 'blue'\n          }, {\n            label: 'Red',\n            value: 'red'\n          }, {\n            label: 'Green',\n            value: 'green'\n          }],\n          value: {\n            label: 'Red',\n            value: 'red'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, function (_ref8) {\n        var state = _ref8.state,\n            setState = _ref8.setState;\n        return React.createElement(Dropdown, {\n          label: \"colors\",\n          options: state.options,\n          value: state.value,\n          onChange: function onChange(value) {\n            return setState({\n              value: value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"components-container -spaced -width-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        initialValue: {\n          value: 0,\n          label: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Context.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, function (_ref9) {\n        var toggleMenu = _ref9.toggleMenu,\n            getItemProps = _ref9.getItemProps,\n            selectedItem = _ref9.selectedItem;\n\n        var _getItemProps2 = getItemProps({\n          item: {\n            value: selectedItem.value + 1,\n            label: selectedItem.value + 1\n          }\n        }),\n            onClick = _getItemProps2.onClick;\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"charcoal\",\n          size: \"sm\",\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Add one\"), React.createElement(Button, {\n          color: \"gray\",\n          size: \"sm\",\n          onClick: function onClick() {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"No-Op\"), React.createElement(Button, {\n          color: \"pink\",\n          size: \"sm\",\n          onClick: toggleMenu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, \"Close\"));\n      }))))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(layoutProps, \"layoutProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/docs/dropdown.mdx\");\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/docs/dropdown.mdx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nMDXContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MDXContent\"\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/docs/dropdown.mdx"],"names":["React","MDXTag","PropsTable","Playground","State","Dropdown","Context","Button","layoutProps","MDXContent","props","layout","components","options","label","value","state","setState","icon","length","toggleMenu","getItemProps","selectedItem","item","onClick","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { PropsTable, Playground } from 'docz'\nimport { State } from 'react-powerplug';\nimport Dropdown, { Context } from 'react-components/shared/dropdown';\nimport Button from 'react-components/shared/button/button.component';\nimport 'styles/_docz.scss';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"dropdown\"}}>{`Dropdown`}</MDXTag>\n<div className=\"components-container -spaced -width-200\">\n  <State initial={{ options:\n    [{ label: 'Blue', value: 'blue' },\n      { label: 'Red', value: 'red' },\n      { label: 'Green', value: 'green' }],\n      value: { label: 'Red', value: 'red' }\n    }}>\n    {({ state, setState }) => (\n      <Dropdown\n        label=\"colors\"\n        options={state.options}\n        value={state.value}\n        onChange={value => setState({ value })}\n      />\n    )}\n  </State>\n</div>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"dropdown-with-variantsentence\"}}>{`Dropdown with variant=\"sentence\"`}</MDXTag>\n<div className=\"components-container -spaced -width-200\">\n  <State initial={{ options:\n    [{ label: 'Blue', value: 'blue' },\n      { label: 'Red', value: 'red' },\n      { label: 'Green', value: 'green' }],\n      value: { label: 'Red', value: 'red' }\n    }}>\n    {({ state, setState }) => (\n      <Dropdown\n        variant=\"sentence\"\n        options={state.options}\n        value={state.value}\n        onChange={value => setState({ value })}\n      />\n    )}\n  </State>\n</div>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"with-caret-arrowtype-and-placement\"}}>{`With 'caret' arrowType and placement`}</MDXTag>\n<div className=\"components-container -spaced -width-200\">\n  <State initial={{ options:\n    [{ label: 'Blue', value: 'blue' },\n      { label: 'Red', value: 'red' },\n      { label: 'Green', value: 'green' }],\n      value: { label: 'Red', value: 'red' }\n    }}>\n    {({ state, setState }) => (\n      <Dropdown\n        label=\"colors\"\n        options={state.options}\n        value={state.value}\n        onChange={value => setState({ value })}\n        arrowType='caret'\n        placement=\"top\"\n      />\n    )}\n  </State>\n</div>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"with-icon-prop-in-the-options\"}}>{`With icon prop in the options`}</MDXTag>\n<div className=\"components-container -spaced -width-200\">\n  <State initial={{ options:\n    [{ label: 'Blue', value: 'blue', icon: 'close' },\n      { label: 'Red', value: 'red', icon: 'close' },\n      { label: 'Green', value: 'green', icon: 'close' }],\n      value: { label: 'Red', value: 'red', icon: 'close' }\n    }}>\n    {({ state, setState }) => (\n      <Dropdown\n        label=\"colors\"\n        options={state.options}\n        value={state.value}\n        onChange={value => setState({ value })}\n        arrowType='caret'\n      />\n    )}\n  </State>\n</div>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"fitcontent-prop-to-adjust-to-selected-content-length\"}}>{`fitContent prop to adjust to selected content length`}</MDXTag>\n<div className=\"components-container -spaced\">\n  <State initial={{ options:\n    [{ label: 'Blue', value: 'blue' },\n      { label: 'Red', value: 'red' },\n      { label: 'Green', value: 'green' }],\n      value: { label: 'Red', value: 'red' }\n    }}>\n    {({ state, setState }) => (\n      <Dropdown\n        label=\"colors\"\n        options={state.options}\n        value={state.value}\n        onChange={value => setState({ value })}\n        arrowType='caret'\n        fitContent\n      />\n    )}\n  </State>\n</div>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"only-view-dropdown\"}}>{`Only view dropdown`}</MDXTag>\n<div className=\"components-container -spaced\">\n  <State initial={{ options:\n    [{ label: 'Blue', value: 'blue' },\n      { label: 'Red', value: 'red' },\n      { label: 'Green', value: 'green' }],\n      value: { label: 'Red', value: 'red' }\n    }}>\n    {({ state, setState }) => (\n      <Dropdown\n        label=\"colors\"\n        options={state.options}\n        value={state.value}\n        onChange={value => setState({ value })}\n        fitContent\n        selectedValueOverride={`${state.options.length} items`}\n        showSelected\n        readOnly\n      />\n    )}\n  </State>\n</div>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"with-children\"}}>{`With children`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Alternatively, the dropdown can accept a child component to render instead of a list of options.\nThis cover more advanced use cases, where the content of the dropdown needs to be different. The dropdown exposes the options API via React Context.`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`The available props via Context are: `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`selectedItem, getItemProps, highlightedIndex, toggleMenu`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<div className=\"components-container -spaced -width-200\">\n  <Dropdown\n    initialValue={{ value: 0, label: '0' }}\n  >\n    <div>\n      <Context.Consumer>\n        {({ toggleMenu, getItemProps, selectedItem }) => {\n          const { onClick } = getItemProps({\n            item: {\n              value: selectedItem.value + 1,\n              label: selectedItem.value + 1\n            }\n          });\n          return (\n            <div>\n              <Button color=\"charcoal\" size=\"sm\" onClick={onClick}>Add one</Button>\n              <Button color=\"gray\"  size=\"sm\" onClick={() => {}}>\n                No-Op\n              </Button>\n              <Button color=\"pink\"  size=\"sm\" onClick={toggleMenu}>\n                Close\n              </Button>\n            </div>\n          )\n        }}\n      </Context.Consumer>\n    </div>\n  </Dropdown>\n</div>\n<PropsTable of={Dropdown} />\n<Playground __position={8} __code={'<div className=\\\"components-container -spaced -width-200\\\">\\n  <State\\n    initial={{\\n      options: [\\n        { label: \\'Blue\\', value: \\'blue\\' },\\n        { label: \\'Red\\', value: \\'red\\' },\\n        { label: \\'Green\\', value: \\'green\\' },\\n      ],\\n      value: { label: \\'Red\\', value: \\'red\\' },\\n    }}\\n  >\\n    {({ state, setState }) => (\\n      <Dropdown\\n        label=\\\"colors\\\"\\n        options={state.options}\\n        value={state.value}\\n        onChange={value => setState({ value })}\\n      />\\n    )}\\n  </State>\\n</div>\\n\\n<div className=\\\"components-container -spaced -width-200\\\">\\n  <Dropdown initialValue={{ value: 0, label: 0 }}>\\n    <div>\\n      <Context.Consumer>\\n        {({ toggleMenu, getItemProps, selectedItem }) => {\\n          const { onClick } = getItemProps({\\n            item: {\\n              value: selectedItem.value + 1,\\n              label: selectedItem.value + 1,\\n            },\\n          })\\n          return (\\n            <div>\\n              <Button color=\\\"charcoal\\\" size=\\\"sm\\\" onClick={onClick}>\\n                Add one\\n              </Button>\\n              <Button color=\\\"gray\\\" size=\\\"sm\\\" onClick={() => {}}>\\n                No-Op\\n              </Button>\\n              <Button color=\\\"pink\\\" size=\\\"sm\\\" onClick={toggleMenu}>\\n                Close\\n              </Button>\\n            </div>\\n          )\\n        }}\\n      </Context.Consumer>\\n    </div>\\n  </Dropdown>\\n</div>'} __scope={{props: this ? this.props : props,State,Dropdown,Context,Button}}>\n  <div className=\"components-container -spaced -width-200\">\n    <State initial={{ options:\n      [{ label: 'Blue', value: 'blue' },\n        { label: 'Red', value: 'red' },\n        { label: 'Green', value: 'green' }],\n        value: { label: 'Red', value: 'red' }\n      }}>\n      {({ state, setState }) => (\n        <Dropdown\n          label=\"colors\"\n          options={state.options}\n          value={state.value}\n          onChange={value => setState({ value })}\n        />\n      )}\n    </State>\n  </div>\n  \n  <div className=\"components-container -spaced -width-200\">\n    <Dropdown\n      initialValue={{ value: 0, label: 0 }}\n    >\n      <div>\n        <Context.Consumer>\n          {({ toggleMenu, getItemProps, selectedItem }) => {\n            const { onClick } = getItemProps({\n              item: {\n                value: selectedItem.value + 1,\n                label: selectedItem.value + 1\n              }\n            });\n            return (\n              <div>\n                <Button color=\"charcoal\" size=\"sm\" onClick={onClick}>Add one</Button>\n                <Button color=\"gray\"  size=\"sm\" onClick={() => {}}>\n                  No-Op\n                </Button>\n                <Button color=\"pink\"  size=\"sm\" onClick={toggleMenu}>\n                  Close\n                </Button>\n              </div>\n            )\n          }}\n        </Context.Consumer>\n      </div>\n    </Dropdown>\n  </div>\n</Playground>\n           </MDXTag>\n  }\n}\n  "]}]}