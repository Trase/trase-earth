{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/grid-list-item/grid-list-item.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/grid-list-item/grid-list-item.component.jsx","mtime":1550685018214},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1553790719443},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport HelpTooltip from '../help-tooltip/help-tooltip.component';\nimport './grid-list-item.scss';\n\nfunction GridListItem(props) {\n  var item = props.item,\n      style = props.style,\n      isGroup = props.isGroup,\n      tooltip = props.tooltip,\n      isActive = props.isActive,\n      isDisabled = props.isDisabled,\n      enableItem = props.enableItem,\n      disableItem = props.disableItem,\n      onInfoClick = props.onInfoClick,\n      isInfoActive = props.isInfoActive;\n  if (!item) return React.createElement(\"b\", {\n    style: style\n  });\n\n  var _onClick = isActive && disableItem ? disableItem : enableItem;\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: style,\n    className: \"c-grid-list-item\"\n  }, isGroup && React.createElement(\"h3\", {\n    className: \"grid-list-item-heading\"\n  }, item.name), !isGroup && React.createElement(\"div\", {\n    className: \"grid-list-item-content\"\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    disabled: isDisabled,\n    onClick: function onClick() {\n      return _onClick(item);\n    },\n    className: cx('grid-list-item-button', {\n      '-active': isActive,\n      '-has-info': !!tooltip,\n      '-clickable': isActive && !disableItem\n    })\n  }, React.createElement(\"span\", null, item.name)), tooltip && React.createElement(\"div\", {\n    className: cx('grid-list-item-info', {\n      '-active': isInfoActive\n    })\n  }, React.createElement(HelpTooltip, {\n    text: tooltip,\n    showIcon: false,\n    trigger: \"click\",\n    show: isInfoActive,\n    position: \"bottom-start\",\n    insideTooltip: true\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    disabled: isDisabled,\n    onClick: function onClick() {\n      return onInfoClick(item);\n    }\n  }, \"i\"))))));\n}\n\nGridListItem.propTypes = {\n  item: PropTypes.object,\n  isGroup: PropTypes.bool,\n  isActive: PropTypes.bool,\n  tooltip: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  enableItem: PropTypes.func,\n  disableItem: PropTypes.func,\n  onInfoClick: PropTypes.func,\n  isInfoActive: PropTypes.bool,\n  style: PropTypes.object.isRequired\n};\nvar _default = GridListItem;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(GridListItem, \"GridListItem\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/grid-list-item/grid-list-item.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/grid-list-item/grid-list-item.component.jsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nGridListItem.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"GridListItem\",\n  \"props\": {\n    \"item\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isGroup\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isActive\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tooltip\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDisabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"enableItem\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disableItem\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onInfoClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isInfoActive\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"style\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/grid-list-item/grid-list-item.component.jsx"],"names":["item","style","isGroup","tooltip","isActive","isDisabled","enableItem","disableItem","onInfoClick","isInfoActive","props","onClick","cx","GridListItem","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport HelpTooltip from '../help-tooltip/help-tooltip.component';\n\nimport './grid-list-item.scss';\n\nfunction GridListItem(props) {\n  const {\n    item,\n    style,\n    isGroup,\n    tooltip,\n    isActive,\n    isDisabled,\n    enableItem,\n    disableItem,\n    onInfoClick,\n    isInfoActive\n  } = props;\n  if (!item) return <b style={style} />;\n  const onClick = isActive && disableItem ? disableItem : enableItem;\n  return (\n    <React.Fragment>\n      <div style={style} className=\"c-grid-list-item\">\n        {isGroup && <h3 className=\"grid-list-item-heading\">{item.name}</h3>}\n        {!isGroup && (\n          <div className=\"grid-list-item-content\">\n            <button\n              type=\"button\"\n              disabled={isDisabled}\n              onClick={() => onClick(item)}\n              className={cx('grid-list-item-button', {\n                '-active': isActive,\n                '-has-info': !!tooltip,\n                '-clickable': isActive && !disableItem\n              })}\n            >\n              <span>{item.name}</span>\n            </button>\n            {tooltip && (\n              <div\n                className={cx('grid-list-item-info', {\n                  '-active': isInfoActive\n                })}\n              >\n                <HelpTooltip\n                  text={tooltip}\n                  showIcon={false}\n                  trigger=\"click\"\n                  show={isInfoActive}\n                  position=\"bottom-start\"\n                  insideTooltip\n                >\n                  <button type=\"button\" disabled={isDisabled} onClick={() => onInfoClick(item)}>\n                    i\n                  </button>\n                </HelpTooltip>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nGridListItem.propTypes = {\n  item: PropTypes.object,\n  isGroup: PropTypes.bool,\n  isActive: PropTypes.bool,\n  tooltip: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  enableItem: PropTypes.func,\n  disableItem: PropTypes.func,\n  onInfoClick: PropTypes.func,\n  isInfoActive: PropTypes.bool,\n  style: PropTypes.object.isRequired\n};\n\nexport default GridListItem;\n"]}]}