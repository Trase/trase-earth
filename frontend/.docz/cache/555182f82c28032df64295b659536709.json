{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js","mtime":1553790719481},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1553790719443},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { createSelector, createStructuredSelector } from 'reselect';\nimport isEmpty from 'lodash/isEmpty';\nimport intersection from 'lodash/intersection';\nimport range from 'lodash/range';\nimport { getPanelId as getPanelName } from 'utils/dashboardPanel';\nimport { makeGetResizeByItems, makeGetRecolorByItems } from 'selectors/indicators.selectors';\nimport { makeGetAvailableYears } from 'selectors/years.selectors';\n\nvar getCountriesPanel = function getCountriesPanel(state) {\n  return state.dashboardElement.countriesPanel;\n};\n\nvar getSourcesPanel = function getSourcesPanel(state) {\n  return state.dashboardElement.sourcesPanel;\n};\n\nvar getDestinationsPanel = function getDestinationsPanel(state) {\n  return state.dashboardElement.destinationsPanel;\n};\n\nvar getCompaniesPanel = function getCompaniesPanel(state) {\n  return state.dashboardElement.companiesPanel;\n};\n\nvar getCommoditiesPanel = function getCommoditiesPanel(state) {\n  return state.dashboardElement.commoditiesPanel;\n};\n\nvar getDashboardPanelTabs = function getDashboardPanelTabs(state) {\n  return state.dashboardElement.tabs;\n};\n\nvar getActiveDashboardPanel = function getActiveDashboardPanel(state) {\n  var _state$dashboardEleme = state.dashboardElement,\n      activePanelId = _state$dashboardEleme.activePanelId,\n      restState = _objectWithoutProperties(_state$dashboardEleme, [\"activePanelId\"]);\n\n  return _objectSpread({\n    id: activePanelId\n  }, restState[\"\".concat(activePanelId, \"Panel\")]);\n};\n\nvar getAppContexts = function getAppContexts(state) {\n  return state.app.contexts;\n};\n\nvar getSelectedYears = function getSelectedYears(state) {\n  return state.dashboardElement.selectedYears;\n};\n\nvar getSelectedResizeBy = function getSelectedResizeBy(state) {\n  return state.dashboardElement.selectedResizeBy;\n};\n\nvar getSelectedRecolorBy = function getSelectedRecolorBy(state) {\n  return state.dashboardElement.selectedRecolorBy;\n};\n\nexport var getActivePanelTabs = createSelector([getActiveDashboardPanel, getDashboardPanelTabs], function (panel, tabs) {\n  return tabs[panel.id] || [];\n});\nexport var getDirtyBlocks = createSelector([getCountriesPanel, getSourcesPanel, getDestinationsPanel, getCompaniesPanel, getCommoditiesPanel], function (countriesPanel, sourcesPanel, destinationsPanel, companiesPanel, commoditiesPanel) {\n  return {\n    sources: !isEmpty(countriesPanel.activeItems),\n    destinations: !isEmpty(destinationsPanel.activeItems),\n    companies: !isEmpty(companiesPanel.activeItems),\n    commodities: !isEmpty(commoditiesPanel.activeItems)\n  };\n});\nexport var getDynamicSentence = createSelector([getDirtyBlocks, getCountriesPanel, getSourcesPanel, getDestinationsPanel, getCompaniesPanel, getCommoditiesPanel], function (dirtyBlocks, countriesPanel, sourcesPanel, destinationsPanel, companiesPanel, commoditiesPanel) {\n  if (Object.values(dirtyBlocks).every(function (block) {\n    return !block;\n  })) {\n    return [];\n  }\n\n  var panels = {\n    countries: countriesPanel,\n    sources: sourcesPanel,\n    destinations: destinationsPanel,\n    companies: companiesPanel,\n    commodities: commoditiesPanel\n  };\n\n  var getActivePanelItem = function getActivePanelItem(panelName, nodeType) {\n    if (!panels[panelName] || !panels[panelName].activeItems || isEmpty(panels[panelName].activeItems)) {\n      return null;\n    }\n\n    var values = Object.values(panels[panelName].activeItems);\n\n    if (nodeType) {\n      var filteredValues = values.filter(function (i) {\n        return i.nodeType === nodeType;\n      });\n      return filteredValues.length > 0 ? filteredValues : null;\n    }\n\n    return values;\n  };\n\n  var sourcesValue = getActivePanelItem('sources') || getActivePanelItem('countries');\n  return [{\n    panel: 'commodities',\n    id: 'commodities',\n    prefix: \"Your dashboard will include \".concat(getActivePanelItem('commodities') ? '' : 'commodities'),\n    value: getActivePanelItem('commodities')\n  }, {\n    panel: 'sources',\n    id: 'sources',\n    prefix: sourcesValue ? \"produced in\" : 'produced in countries covered by Trase',\n    value: sourcesValue,\n    transform: 'capitalize'\n  }, {\n    panel: 'companies',\n    id: 'exporting-companies',\n    prefix: getActivePanelItem('companies', 'EXPORTER') ? 'exported by' : '',\n    value: getActivePanelItem('companies', 'EXPORTER'),\n    optional: true,\n    transform: 'capitalize'\n  }, {\n    panel: 'companies',\n    id: 'importing-companies',\n    prefix: getActivePanelItem('companies', 'IMPORTER') ? 'imported by' : '',\n    value: getActivePanelItem('companies', 'IMPORTER'),\n    optional: true,\n    transform: 'capitalize'\n  }, {\n    panel: 'destinations',\n    id: 'destinations',\n    prefix: getActivePanelItem('destinations') ? \"going to\" : '',\n    value: getActivePanelItem('destinations'),\n    optional: true,\n    transform: 'capitalize'\n  }];\n});\nexport var getIsDisabled = createSelector([getDynamicSentence, function (state, ownProps) {\n  return ownProps.step;\n}], function (dynamicSentence, step) {\n  if (dynamicSentence.length === 0 || typeof step === 'undefined') return true;\n  var currentPanel = getPanelName(step);\n  var currentSentencePart = dynamicSentence.find(function (p) {\n    return p.panel === currentPanel;\n  });\n  if (!currentSentencePart.optional && !currentSentencePart.value) return true;\n  return false;\n});\nexport var getDashboardsContext = createSelector([getCountriesPanel, getCommoditiesPanel, getAppContexts], function (countriesPanel, commoditiesPanel, contexts) {\n  var _ref = Object.values(countriesPanel.activeItems)[0] || {},\n      countryName = _ref.name;\n\n  var _ref2 = Object.values(commoditiesPanel.activeItems)[0] || {},\n      commodityName = _ref2.name;\n\n  var context = contexts.find(function (ctx) {\n    return ctx.countryName === countryName && ctx.commodityName === commodityName;\n  });\n  return context || null;\n});\nvar getDashboardContextResizeBy = createSelector(getDashboardsContext, function (context) {\n  return context && context.resizeBy;\n});\nvar getDashboardContextRecolorBy = createSelector(getDashboardsContext, getSelectedYears, function (context, selectedYears) {\n  if (!context) return [];\n  var emptyOption = {\n    position: 0,\n    groupNumber: -1,\n    label: 'No selection',\n    name: 'none',\n    years: selectedYears || [],\n    value: null\n  };\n  return context.recolorBy.filter(function (item) {\n    return !['LR_DEFICIT_PERC_PRIVATE_LAND', 'SMALLHOLDERS'].includes(item.name);\n  }).concat(emptyOption);\n});\nvar getDashboardSelectedResizeBy = createSelector([getSelectedResizeBy, getDashboardContextResizeBy], function (selectedResizeBy, contextResizeByItems) {\n  if (!contextResizeByItems) {\n    return {\n      label: 'Select an Indicator',\n      value: null\n    };\n  }\n\n  var itemIncludedInContext = contextResizeByItems.find(function (item) {\n    return item.attributeId === selectedResizeBy;\n  });\n\n  if (!selectedResizeBy || !itemIncludedInContext) {\n    return contextResizeByItems.find(function (item) {\n      return item.isDefault;\n    });\n  }\n\n  return itemIncludedInContext;\n});\nvar getDashboardSelectedRecolorBy = createSelector([getSelectedRecolorBy, getDashboardContextRecolorBy], function (selectedRecolorBy, contextRecolorByItems) {\n  if (!selectedRecolorBy || contextRecolorByItems.length === 0) {\n    return {\n      label: 'Select an Indicator',\n      value: null\n    };\n  }\n\n  return contextRecolorByItems.find(function (item) {\n    return item.attributeId === selectedRecolorBy;\n  });\n});\nvar getDashboardSelectedYears = createSelector([getSelectedYears, getDashboardsContext, makeGetAvailableYears(getDashboardSelectedResizeBy, getDashboardSelectedRecolorBy, getDashboardsContext)], function (selectedYears, context, availableYears) {\n  if (!selectedYears && !context) {\n    return [null, null];\n  }\n\n  if (context && !selectedYears) {\n    return [context.defaultYear, context.defaultYear];\n  }\n\n  if (context && selectedYears) {\n    var selectedYearsRange = range(selectedYears[0], selectedYears[1] + 1);\n    var intersectedYears = intersection(selectedYearsRange, availableYears);\n    var selectedAreUnavailable = isEmpty(intersectedYears);\n\n    if (selectedAreUnavailable) {\n      return [context.defaultYear, context.defaultYear];\n    }\n\n    return [intersectedYears[0], intersectedYears[intersectedYears.length - 1]];\n  }\n\n  return [null, null];\n});\nexport var getDashboardFiltersProps = createStructuredSelector({\n  years: makeGetAvailableYears(getDashboardSelectedResizeBy, getDashboardSelectedRecolorBy, getDashboardsContext),\n  selectedYears: getDashboardSelectedYears,\n  selectedResizeBy: getDashboardSelectedResizeBy,\n  selectedRecolorBy: getDashboardSelectedRecolorBy,\n  resizeBy: makeGetResizeByItems(getDashboardContextResizeBy, getDashboardSelectedYears),\n  recolorBy: makeGetRecolorByItems(getDashboardContextRecolorBy, getDashboardSelectedYears)\n});\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(_objectWithoutProperties, \"_objectWithoutProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(_objectWithoutPropertiesLoose, \"_objectWithoutPropertiesLoose\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getCountriesPanel, \"getCountriesPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getSourcesPanel, \"getSourcesPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDestinationsPanel, \"getDestinationsPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getCompaniesPanel, \"getCompaniesPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getCommoditiesPanel, \"getCommoditiesPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDashboardPanelTabs, \"getDashboardPanelTabs\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getActiveDashboardPanel, \"getActiveDashboardPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getAppContexts, \"getAppContexts\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getSelectedYears, \"getSelectedYears\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getSelectedResizeBy, \"getSelectedResizeBy\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getSelectedRecolorBy, \"getSelectedRecolorBy\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getActivePanelTabs, \"getActivePanelTabs\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDirtyBlocks, \"getDirtyBlocks\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDynamicSentence, \"getDynamicSentence\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getIsDisabled, \"getIsDisabled\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDashboardsContext, \"getDashboardsContext\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDashboardContextResizeBy, \"getDashboardContextResizeBy\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDashboardContextRecolorBy, \"getDashboardContextRecolorBy\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDashboardSelectedResizeBy, \"getDashboardSelectedResizeBy\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDashboardSelectedRecolorBy, \"getDashboardSelectedRecolorBy\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDashboardSelectedYears, \"getDashboardSelectedYears\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n  reactHotLoader.register(getDashboardFiltersProps, \"getDashboardFiltersProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.selectors.js"],"names":["getPanelId","getCountriesPanel","state","getSourcesPanel","getDestinationsPanel","getCompaniesPanel","getCommoditiesPanel","getDashboardPanelTabs","getActiveDashboardPanel","activePanelId","restState","id","getAppContexts","getSelectedYears","getSelectedResizeBy","getSelectedRecolorBy","getActivePanelTabs","createSelector","tabs","panel","getDirtyBlocks","sources","isEmpty","countriesPanel","destinations","destinationsPanel","companies","companiesPanel","commodities","commoditiesPanel","getDynamicSentence","panels","countries","getActivePanelItem","values","Object","filteredValues","i","sourcesValue","prefix","value","transform","optional","getIsDisabled","ownProps","dynamicSentence","currentPanel","getPanelName","currentSentencePart","p","getDashboardsContext","countryName","commodityName","context","ctx","getDashboardContextResizeBy","getDashboardContextRecolorBy","emptyOption","position","groupNumber","label","name","years","selectedYears","item","getDashboardSelectedResizeBy","itemIncludedInContext","getDashboardSelectedRecolorBy","contextRecolorByItems","getDashboardSelectedYears","makeGetAvailableYears","selectedYearsRange","range","intersectedYears","intersection","selectedAreUnavailable","getDashboardFiltersProps","createStructuredSelector","selectedResizeBy","selectedRecolorBy","resizeBy","makeGetResizeByItems","recolorBy","makeGetRecolorByItems"],"mappings":"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","sourcesContent":["import { createSelector, createStructuredSelector } from 'reselect';\nimport isEmpty from 'lodash/isEmpty';\nimport intersection from 'lodash/intersection';\nimport range from 'lodash/range';\nimport { getPanelId as getPanelName } from 'utils/dashboardPanel';\nimport { makeGetResizeByItems, makeGetRecolorByItems } from 'selectors/indicators.selectors';\nimport { makeGetAvailableYears } from 'selectors/years.selectors';\n\nconst getCountriesPanel = state => state.dashboardElement.countriesPanel;\nconst getSourcesPanel = state => state.dashboardElement.sourcesPanel;\nconst getDestinationsPanel = state => state.dashboardElement.destinationsPanel;\nconst getCompaniesPanel = state => state.dashboardElement.companiesPanel;\nconst getCommoditiesPanel = state => state.dashboardElement.commoditiesPanel;\nconst getDashboardPanelTabs = state => state.dashboardElement.tabs;\nconst getActiveDashboardPanel = state => {\n  const { activePanelId, ...restState } = state.dashboardElement;\n  return { id: activePanelId, ...restState[`${activePanelId}Panel`] };\n};\nconst getAppContexts = state => state.app.contexts;\nconst getSelectedYears = state => state.dashboardElement.selectedYears;\nconst getSelectedResizeBy = state => state.dashboardElement.selectedResizeBy;\nconst getSelectedRecolorBy = state => state.dashboardElement.selectedRecolorBy;\n\nexport const getActivePanelTabs = createSelector(\n  [getActiveDashboardPanel, getDashboardPanelTabs],\n  (panel, tabs) => tabs[panel.id] || []\n);\n\nexport const getDirtyBlocks = createSelector(\n  [\n    getCountriesPanel,\n    getSourcesPanel,\n    getDestinationsPanel,\n    getCompaniesPanel,\n    getCommoditiesPanel\n  ],\n  (countriesPanel, sourcesPanel, destinationsPanel, companiesPanel, commoditiesPanel) => ({\n    sources: !isEmpty(countriesPanel.activeItems),\n    destinations: !isEmpty(destinationsPanel.activeItems),\n    companies: !isEmpty(companiesPanel.activeItems),\n    commodities: !isEmpty(commoditiesPanel.activeItems)\n  })\n);\n\nexport const getDynamicSentence = createSelector(\n  [\n    getDirtyBlocks,\n    getCountriesPanel,\n    getSourcesPanel,\n    getDestinationsPanel,\n    getCompaniesPanel,\n    getCommoditiesPanel\n  ],\n  (\n    dirtyBlocks,\n    countriesPanel,\n    sourcesPanel,\n    destinationsPanel,\n    companiesPanel,\n    commoditiesPanel\n  ) => {\n    if (Object.values(dirtyBlocks).every(block => !block)) {\n      return [];\n    }\n    const panels = {\n      countries: countriesPanel,\n      sources: sourcesPanel,\n      destinations: destinationsPanel,\n      companies: companiesPanel,\n      commodities: commoditiesPanel\n    };\n    const getActivePanelItem = (panelName, nodeType) => {\n      if (\n        !panels[panelName] ||\n        !panels[panelName].activeItems ||\n        isEmpty(panels[panelName].activeItems)\n      ) {\n        return null;\n      }\n      const values = Object.values(panels[panelName].activeItems);\n      if (nodeType) {\n        const filteredValues = values.filter(i => i.nodeType === nodeType);\n        return filteredValues.length > 0 ? filteredValues : null;\n      }\n      return values;\n    };\n\n    const sourcesValue = getActivePanelItem('sources') || getActivePanelItem('countries');\n\n    return [\n      {\n        panel: 'commodities',\n        id: 'commodities',\n        prefix: `Your dashboard will include ${\n          getActivePanelItem('commodities') ? '' : 'commodities'\n        }`,\n        value: getActivePanelItem('commodities')\n      },\n      {\n        panel: 'sources',\n        id: 'sources',\n        prefix: sourcesValue ? `produced in` : 'produced in countries covered by Trase',\n        value: sourcesValue,\n        transform: 'capitalize'\n      },\n      {\n        panel: 'companies',\n        id: 'exporting-companies',\n        prefix: getActivePanelItem('companies', 'EXPORTER') ? 'exported by' : '',\n        value: getActivePanelItem('companies', 'EXPORTER'),\n        optional: true,\n        transform: 'capitalize'\n      },\n      {\n        panel: 'companies',\n        id: 'importing-companies',\n        prefix: getActivePanelItem('companies', 'IMPORTER') ? 'imported by' : '',\n        value: getActivePanelItem('companies', 'IMPORTER'),\n        optional: true,\n        transform: 'capitalize'\n      },\n      {\n        panel: 'destinations',\n        id: 'destinations',\n        prefix: getActivePanelItem('destinations') ? `going to` : '',\n        value: getActivePanelItem('destinations'),\n        optional: true,\n        transform: 'capitalize'\n      }\n    ];\n  }\n);\n\nexport const getIsDisabled = createSelector(\n  [getDynamicSentence, (state, ownProps) => ownProps.step],\n  (dynamicSentence, step) => {\n    if (dynamicSentence.length === 0 || typeof step === 'undefined') return true;\n    const currentPanel = getPanelName(step);\n    const currentSentencePart = dynamicSentence.find(p => p.panel === currentPanel);\n    if (!currentSentencePart.optional && !currentSentencePart.value) return true;\n    return false;\n  }\n);\n\nexport const getDashboardsContext = createSelector(\n  [getCountriesPanel, getCommoditiesPanel, getAppContexts],\n  (countriesPanel, commoditiesPanel, contexts) => {\n    const { name: countryName } = Object.values(countriesPanel.activeItems)[0] || {};\n    const { name: commodityName } = Object.values(commoditiesPanel.activeItems)[0] || {};\n    const context = contexts.find(\n      ctx => ctx.countryName === countryName && ctx.commodityName === commodityName\n    );\n\n    return context || null;\n  }\n);\n\nconst getDashboardContextResizeBy = createSelector(\n  getDashboardsContext,\n  context => context && context.resizeBy\n);\n\nconst getDashboardContextRecolorBy = createSelector(\n  getDashboardsContext,\n  getSelectedYears,\n  (context, selectedYears) => {\n    if (!context) return [];\n    const emptyOption = {\n      position: 0,\n      groupNumber: -1,\n      label: 'No selection',\n      name: 'none',\n      years: selectedYears || [],\n      value: null\n    };\n    return context.recolorBy\n      .filter(item => !['LR_DEFICIT_PERC_PRIVATE_LAND', 'SMALLHOLDERS'].includes(item.name))\n      .concat(emptyOption);\n  }\n);\n\nconst getDashboardSelectedResizeBy = createSelector(\n  [getSelectedResizeBy, getDashboardContextResizeBy],\n  (selectedResizeBy, contextResizeByItems) => {\n    if (!contextResizeByItems) {\n      return { label: 'Select an Indicator', value: null };\n    }\n\n    const itemIncludedInContext = contextResizeByItems.find(\n      item => item.attributeId === selectedResizeBy\n    );\n\n    if (!selectedResizeBy || !itemIncludedInContext) {\n      return contextResizeByItems.find(item => item.isDefault);\n    }\n\n    return itemIncludedInContext;\n  }\n);\n\nconst getDashboardSelectedRecolorBy = createSelector(\n  [getSelectedRecolorBy, getDashboardContextRecolorBy],\n  (selectedRecolorBy, contextRecolorByItems) => {\n    if (!selectedRecolorBy || contextRecolorByItems.length === 0) {\n      return { label: 'Select an Indicator', value: null };\n    }\n    return contextRecolorByItems.find(item => item.attributeId === selectedRecolorBy);\n  }\n);\n\nconst getDashboardSelectedYears = createSelector(\n  [\n    getSelectedYears,\n    getDashboardsContext,\n    makeGetAvailableYears(\n      getDashboardSelectedResizeBy,\n      getDashboardSelectedRecolorBy,\n      getDashboardsContext\n    )\n  ],\n  (selectedYears, context, availableYears) => {\n    if (!selectedYears && !context) {\n      return [null, null];\n    }\n\n    if (context && !selectedYears) {\n      return [context.defaultYear, context.defaultYear];\n    }\n\n    if (context && selectedYears) {\n      const selectedYearsRange = range(selectedYears[0], selectedYears[1] + 1);\n      const intersectedYears = intersection(selectedYearsRange, availableYears);\n      const selectedAreUnavailable = isEmpty(intersectedYears);\n\n      if (selectedAreUnavailable) {\n        return [context.defaultYear, context.defaultYear];\n      }\n\n      return [intersectedYears[0], intersectedYears[intersectedYears.length - 1]];\n    }\n\n    return [null, null];\n  }\n);\n\nexport const getDashboardFiltersProps = createStructuredSelector({\n  years: makeGetAvailableYears(\n    getDashboardSelectedResizeBy,\n    getDashboardSelectedRecolorBy,\n    getDashboardsContext\n  ),\n  selectedYears: getDashboardSelectedYears,\n  selectedResizeBy: getDashboardSelectedResizeBy,\n  selectedRecolorBy: getDashboardSelectedRecolorBy,\n  resizeBy: makeGetResizeByItems(getDashboardContextResizeBy, getDashboardSelectedYears),\n  recolorBy: makeGetRecolorByItems(getDashboardContextRecolorBy, getDashboardSelectedYears)\n});\n"]}]}