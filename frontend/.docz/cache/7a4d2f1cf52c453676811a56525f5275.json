{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/grid-list-item/grid-list-item.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/grid-list-item/grid-list-item.component.jsx","mtime":1550685018214},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1550685017658},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["import React from'react';import cx from'classnames';import HelpTooltip from'../help-tooltip/help-tooltip.component';import'./grid-list-item.scss';function GridListItem(props){var item=props.item,style=props.style,isGroup=props.isGroup,tooltip=props.tooltip,isActive=props.isActive,isDisabled=props.isDisabled,enableItem=props.enableItem,disableItem=props.disableItem,onInfoClick=props.onInfoClick,isInfoActive=props.isInfoActive;if(!item)return React.createElement(\"b\",{style:style});var _onClick=isActive&&disableItem?disableItem:enableItem;return React.createElement(React.Fragment,null,React.createElement(\"div\",{style:style,className:\"c-grid-list-item\"},isGroup&&React.createElement(\"h3\",{className:\"grid-list-item-heading\"},item.name),!isGroup&&React.createElement(\"div\",{className:\"grid-list-item-content\"},React.createElement(\"button\",{type:\"button\",disabled:isDisabled,onClick:function onClick(){return _onClick(item);},className:cx('grid-list-item-button',{'-active':isActive,'-has-info':!!tooltip,'-clickable':isActive&&!disableItem})},React.createElement(\"span\",null,item.name)),tooltip&&React.createElement(\"div\",{className:cx('grid-list-item-info',{'-active':isInfoActive})},React.createElement(HelpTooltip,{text:tooltip,showIcon:false,trigger:\"click\",show:isInfoActive,position:\"bottom-start\",insideTooltip:true},React.createElement(\"button\",{type:\"button\",disabled:isDisabled,onClick:function onClick(){return onInfoClick(item);}},\"i\"))))));}export default GridListItem;GridListItem.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"GridListItem\"};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/grid-list-item/grid-list-item.component.jsx"],"names":["item","style","isGroup","tooltip","isActive","isDisabled","enableItem","disableItem","onInfoClick","isInfoActive","props","onClick","cx"],"mappings":"AAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CAEA,MAAA,CAAA,EAAA,KAAA,YAAA,CACA,MAAA,CAAA,WAAA,KAAA,wCAAA,CAEA,MAAA,uBAAA,CAEA,QAAA,CAAA,YAAA,CAAA,KAAA,CAA6B,CAAA,GAEzBA,CAAAA,IAFyB,CAYvBU,KAZuB,CAAA,IAAA,CAGzBT,KAHyB,CAYvBS,KAZuB,CAAA,KAAA,CAIzBR,OAJyB,CAYvBQ,KAZuB,CAAA,OAAA,CAKzBP,OALyB,CAYvBO,KAZuB,CAAA,OAAA,CAMzBN,QANyB,CAYvBM,KAZuB,CAAA,QAAA,CAOzBL,UAPyB,CAYvBK,KAZuB,CAAA,UAAA,CAQzBJ,UARyB,CAYvBI,KAZuB,CAAA,UAAA,CASzBH,WATyB,CAYvBG,KAZuB,CAAA,WAAA,CAUzBF,WAVyB,CAYvBE,KAZuB,CAAA,WAAA,CAWzBD,YAXyB,CAYvBC,KAZuB,CAAA,YAAA,CAa3B,GAAI,CAAJ,IAAA,CAAW,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAG,KAAK,CAAET,KAAV,CAAA,CAAP,CACX,GAAMU,CAAAA,QAAO,CAAGP,QAAQ,EAARA,WAAAA,CAAAA,WAAAA,CAAhB,UAAA,CACA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,CAAA,IAAA,CACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAK,KAAK,CAAV,KAAA,CAAmB,SAAS,CAAC,kBAA7B,CAAA,CACGF,OAAO,EAAI,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAI,SAAS,CAAC,wBAAd,CAAA,CAAwCF,IAAI,CAD1D,IACc,CADd,CAEG,CAAA,OAAA,EACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAK,SAAS,CAAC,wBAAf,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CACE,IAAI,CADN,QAAA,CAEE,QAAQ,CAFV,UAAA,CAGE,OAAO,CAAE,QAAA,CAAA,OAAA,EAAA,CAAA,MAAMW,CAAAA,QAAO,CAAb,IAAa,CAAb,CAHX,CAAA,CAIE,SAAS,CAAEC,EAAE,CAAA,uBAAA,CAA0B,CACrC,UADqC,QAAA,CAErC,YAAa,CAAC,CAFuB,OAAA,CAGrC,aAAcR,QAAQ,EAAI,CAACG,WAHU,CAA1B,CAJf,CAAA,CAUE,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,IAAA,CAAOP,IAAI,CAXf,IAWI,CAVF,CADF,CAaGG,OAAO,EACN,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACE,SAAS,CAAES,EAAE,CAAA,qBAAA,CAAwB,CACnC,UAAWH,YADwB,CAAxB,CADf,CAAA,CAKE,KAAA,CAAA,aAAA,CAAA,WAAA,CAAA,CACE,IAAI,CADN,OAAA,CAEE,QAAQ,CAFV,KAAA,CAGE,OAAO,CAHT,OAAA,CAIE,IAAI,CAJN,YAAA,CAKE,QAAQ,CALV,cAAA,CAME,aAAa,CAAA,IANf,CAAA,CAQE,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CAAQ,IAAI,CAAZ,QAAA,CAAsB,QAAQ,CAA9B,UAAA,CAA4C,OAAO,CAAE,QAAA,CAAA,OAAA,EAAA,CAAA,MAAMD,CAAAA,WAAW,CAAjB,IAAiB,CAAjB,CAAA,CAArD,CAAA,CAhChB,GAgCgB,CARF,CALF,CAdJ,CAHJ,CADF,CADF,CA2CD,CAeD,cAAA,CAAA,YAAA,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport HelpTooltip from '../help-tooltip/help-tooltip.component';\n\nimport './grid-list-item.scss';\n\nfunction GridListItem(props) {\n  const {\n    item,\n    style,\n    isGroup,\n    tooltip,\n    isActive,\n    isDisabled,\n    enableItem,\n    disableItem,\n    onInfoClick,\n    isInfoActive\n  } = props;\n  if (!item) return <b style={style} />;\n  const onClick = isActive && disableItem ? disableItem : enableItem;\n  return (\n    <React.Fragment>\n      <div style={style} className=\"c-grid-list-item\">\n        {isGroup && <h3 className=\"grid-list-item-heading\">{item.name}</h3>}\n        {!isGroup && (\n          <div className=\"grid-list-item-content\">\n            <button\n              type=\"button\"\n              disabled={isDisabled}\n              onClick={() => onClick(item)}\n              className={cx('grid-list-item-button', {\n                '-active': isActive,\n                '-has-info': !!tooltip,\n                '-clickable': isActive && !disableItem\n              })}\n            >\n              <span>{item.name}</span>\n            </button>\n            {tooltip && (\n              <div\n                className={cx('grid-list-item-info', {\n                  '-active': isInfoActive\n                })}\n              >\n                <HelpTooltip\n                  text={tooltip}\n                  showIcon={false}\n                  trigger=\"click\"\n                  show={isInfoActive}\n                  position=\"bottom-start\"\n                  insideTooltip\n                >\n                  <button type=\"button\" disabled={isDisabled} onClick={() => onInfoClick(item)}>\n                    i\n                  </button>\n                </HelpTooltip>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nGridListItem.propTypes = {\n  item: PropTypes.object,\n  isGroup: PropTypes.bool,\n  isActive: PropTypes.bool,\n  tooltip: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  enableItem: PropTypes.func,\n  disableItem: PropTypes.func,\n  onInfoClick: PropTypes.func,\n  isInfoActive: PropTypes.bool,\n  style: PropTypes.object.isRequired\n};\n\nexport default GridListItem;\n"]}]}