{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/button/button.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/button/button.component.jsx","mtime":1550685018205},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1550685017658},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import React from'react';import cx from'classnames';import'./button.scss';// TODO: remove className prop, currently the application buttons are so fragmented\n//  that we need to provide a escape hatch.\nfunction Button(props){var _cx;var as=props.as,variant=props.variant,color=props.color,size=props.size,weight=props.weight,children=props.children,icon=props.icon,iconPosition=props.iconPosition,rest=_objectWithoutProperties(props,[\"as\",\"variant\",\"color\",\"size\",\"weight\",\"children\",\"icon\",\"iconPosition\"]);var buttonProps=_objectSpread({},rest,{className:cx('c-button',variant,rest.className,(_cx={},_defineProperty(_cx,\"color-\".concat(color),color),_defineProperty(_cx,\"size-\".concat(size),size),_defineProperty(_cx,\"weight-\".concat(weight),weight),_defineProperty(_cx,'with-icon',icon),_cx)),type:as==='button'?as:undefined});var iconComponent=React.createElement(\"svg\",{className:\"icon \".concat(icon),style:{pointerEvents:'none'}},React.createElement(\"use\",{xlinkHref:\"#\".concat(icon)}));var shouldUseChildrenContainer=typeof children==='string'||Array.isArray(children)&&children.every(function(child){return typeof child==='string';});var childrenWithContainer=React.createElement(\"span\",{className:\"button-text-container\",title:children},Array.isArray(children)?children.join(''):children);var childrenWithIcon=React.createElement(React.Fragment,null,icon&&iconPosition==='left'&&iconComponent,shouldUseChildrenContainer?childrenWithContainer:children,icon&&iconPosition==='right'&&iconComponent);return React.createElement(as,buttonProps,childrenWithIcon);}Button.defaultProps={as:'button',iconPosition:'right'};export default Button;Button.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"Button\",\"props\":{\"as\":{\"defaultValue\":{\"value\":\"'button'\",\"computed\":false},\"required\":false},\"iconPosition\":{\"defaultValue\":{\"value\":\"'right'\",\"computed\":false},\"required\":false}}};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/button/button.component.jsx"],"names":["as","variant","color","size","weight","children","icon","iconPosition","rest","props","buttonProps","className","cx","type","undefined","iconComponent","pointerEvents","shouldUseChildrenContainer","Array","childrenWithContainer","childrenWithIcon","React","Button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport './button.scss';\n\n// TODO: remove className prop, currently the application buttons are so fragmented\n//  that we need to provide a escape hatch.\nfunction Button(props) {\n  const { as, variant, color, size, weight, children, icon, iconPosition, ...rest } = props;\n  const buttonProps = {\n    ...rest,\n    className: cx('c-button', variant, rest.className, {\n      [`color-${color}`]: color,\n      [`size-${size}`]: size,\n      [`weight-${weight}`]: weight,\n      'with-icon': icon\n    }),\n    type: as === 'button' ? as : undefined\n  };\n\n  const iconComponent = (\n    <svg className={`icon ${icon}`} style={{ pointerEvents: 'none' }}>\n      <use xlinkHref={`#${icon}`} />\n    </svg>\n  );\n\n  const shouldUseChildrenContainer =\n    typeof children === 'string' ||\n    (Array.isArray(children) && children.every(child => typeof child === 'string'));\n\n  const childrenWithContainer = (\n    <span className=\"button-text-container\" title={children}>\n      {Array.isArray(children) ? children.join('') : children}\n    </span>\n  );\n\n  const childrenWithIcon = (\n    <>\n      {icon && iconPosition === 'left' && iconComponent}\n      {shouldUseChildrenContainer ? childrenWithContainer : children}\n      {icon && iconPosition === 'right' && iconComponent}\n    </>\n  );\n\n  return React.createElement(as, buttonProps, childrenWithIcon);\n}\n\nButton.defaultProps = {\n  as: 'button',\n  iconPosition: 'right'\n};\n\nButton.propTypes = {\n  icon: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  weight: PropTypes.string,\n  children: PropTypes.node,\n  variant: PropTypes.string,\n  className: PropTypes.string,\n  iconPosition: PropTypes.string,\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n};\n\nexport default Button;\n"]}]}