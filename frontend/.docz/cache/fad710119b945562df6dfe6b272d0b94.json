{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-runtime\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx","mtime":1553708312117},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1553790719443},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1550511965648},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":1547926395833}],"contextDependencies":[],"result":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Downshift from 'downshift';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport DropdownContext from 'react-components/shared/dropdown/dropdown.context';\nimport Text from 'react-components/shared/text';\nimport Heading from 'react-components/shared/heading/heading.component';\nimport Tooltip from 'react-components/shared/help-tooltip/help-tooltip.component';\nimport cx from 'classnames';\nimport './dropdown.scss';\nimport './dropdown-nav.variant.scss';\nimport './dropdown-sentence.variant.scss';\nimport './dropdown-profiles.variant.scss';\n\nfunction Dropdown(props) {\n  var listItemRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      listHeight = _useState2[0],\n      updateListHeight = _useState2[1];\n\n  useEffect(function () {\n    if (listItemRef.current && listHeight === null && props.options && props.options.length > 0 && props.clip) {\n      var _listItemRef$current$ = listItemRef.current.getBoundingClientRect(),\n          height = _listItemRef$current$.height;\n\n      var optionsLength = props.showSelected ? props.options.length : props.options.length - 1;\n\n      if (height > 0 && height * optionsLength > Dropdown.DEFAULT_MAX_LIST_HEIGHT) {\n        var newListHeight = height * 6 - height / 2;\n        updateListHeight(newListHeight);\n      }\n    }\n  }); // popper won't detect changes on its children so the necessary recalculations won't happen\n  // we create a key that changes every time the options or children change, that way we remount the popper component\n\n  var popperForceUpdateKey = useRef(0);\n\n  var _useState3 = useState(props.options || props.children),\n      _useState4 = _slicedToArray(_useState3, 2),\n      content = _useState4[0],\n      updateContent = _useState4[1];\n\n  useEffect(function () {\n    var newContent = props.options || props.children;\n\n    if (newContent !== content) {\n      updateContent(newContent);\n      popperForceUpdateKey.current++;\n    }\n  }, [props.options, props.children, content]);\n\n  function renderItem(item, index, highlightedIndex, getItemProps) {\n    var readOnly = props.readOnly;\n    return React.createElement(React.Fragment, null, item.hasSeparator && React.createElement(\"li\", {\n      className: \"dropdow-menu-separator\"\n    }), React.createElement(\"li\", getItemProps({\n      item: item,\n      index: index,\n      key: item.value,\n      disabled: readOnly || item.isDisabled,\n      className: cx('dropdown-menu-item', {\n        '-with-icon': item.icon,\n        '-disabled': item.isDisabled,\n        '-highlighted': highlightedIndex === index\n      }),\n      ref: index === 0 ? listItemRef : undefined\n    }), item.icon && React.createElement(\"svg\", {\n      className: cx('dropdown-menu-item-icon', 'icon', \"icon-\".concat(item.icon))\n    }, React.createElement(\"use\", {\n      xlinkHref: \"#icon-\".concat(item.icon)\n    })), React.createElement(Text, {\n      title: item.label,\n      weight: \"regular\",\n      className: \"item-label\"\n    }, item.label), item.tooltip && React.createElement(Tooltip, {\n      className: \"dropdown-menu-item-tooltip\",\n      constraint: \"window\",\n      text: item.tooltip\n    })));\n  }\n\n  function getOptions(selectedItem, highlightedIndex, getItemProps) {\n    var showSelected = props.showSelected,\n        options = props.options;\n    var optionsToShow = showSelected ? options : options.filter(function (o) {\n      return o.value !== (selectedItem && selectedItem.value) && o.value !== selectedItem.value;\n    });\n    return optionsToShow.map(function (item, i) {\n      return renderItem(item, i, highlightedIndex, getItemProps);\n    });\n  }\n  /* eslint-disable react/prop-types */\n\n\n  function renderButton(_ref) {\n    var ref = _ref.ref,\n        inputValue = _ref.inputValue,\n        getToggleButtonProps = _ref.getToggleButtonProps;\n    var arrowType = props.arrowType,\n        selectedValueOverride = props.selectedValueOverride,\n        label = props.label,\n        size = props.size,\n        color = props.color,\n        tooltip = props.tooltip,\n        weight = props.weight,\n        variant = props.variant,\n        isDisabled = props.isDisabled;\n    var labelProps = {\n      profiles: {\n        size: 'rg'\n      },\n      nav: {\n        color: 'grey-faded'\n      }\n    }[variant] || {};\n    return React.createElement(\"button\", getToggleButtonProps({\n      ref: ref,\n      disabled: isDisabled,\n      className: cx('dropdown-selected-item', _defineProperty({}, \"-\".concat(arrowType), arrowType))\n    }), React.createElement(Text, _extends({\n      as: \"span\",\n      size: \"sm\",\n      variant: \"mono\",\n      color: color,\n      transform: \"uppercase\"\n    }, labelProps, {\n      className: \"dropdown-label\"\n    }), label, tooltip && React.createElement(Tooltip, {\n      text: tooltip,\n      constraint: \"window\"\n    })), React.createElement(Heading, {\n      as: \"span\",\n      size: size,\n      weight: weight,\n      color: color,\n      className: \"dropdown-value\",\n      title: inputValue\n    }, selectedValueOverride || inputValue));\n  }\n\n  function renderContent(_ref2) {\n    var ref = _ref2.ref,\n        style = _ref2.style,\n        placement = _ref2.placement,\n        selectedItem = _ref2.selectedItem,\n        getItemProps = _ref2.getItemProps,\n        getMenuProps = _ref2.getMenuProps,\n        highlightedIndex = _ref2.highlightedIndex,\n        toggleMenu = _ref2.toggleMenu;\n    var decoratedChildren = typeof props.children !== 'undefined' ? React.createElement(DropdownContext.Provider, {\n      value: {\n        selectedItem: selectedItem,\n        getItemProps: getItemProps,\n        highlightedIndex: highlightedIndex,\n        toggleMenu: toggleMenu\n      }\n    }, props.children) : undefined;\n    var styleToApply = listHeight ? _objectSpread({}, style, {\n      height: listHeight\n    }) : style;\n    return React.createElement(\"ul\", getMenuProps({\n      ref: ref,\n      style: styleToApply,\n      'data-placement': placement,\n      className: 'dropdown-menu'\n    }), props.options ? getOptions(selectedItem, highlightedIndex, getItemProps) : decoratedChildren);\n  }\n  /* eslint-enable react/prop-types */\n\n\n  var value = props.value,\n      color = props.color,\n      align = props.align,\n      variant = props.variant,\n      readOnly = props.readOnly,\n      onChange = props.onChange,\n      isDisabled = props.isDisabled,\n      placement = props.placement,\n      initialValue = props.initialValue,\n      itemToString = props.itemToString;\n  return React.createElement(Downshift, {\n    initialSelectedItem: initialValue,\n    selectedItem: value,\n    itemToString: itemToString,\n    onChange: onChange\n  }, function (_ref3) {\n    var _cx2;\n\n    var isOpen = _ref3.isOpen,\n        getItemProps = _ref3.getItemProps,\n        selectedItem = _ref3.selectedItem,\n        getToggleButtonProps = _ref3.getToggleButtonProps,\n        getMenuProps = _ref3.getMenuProps,\n        inputValue = _ref3.inputValue,\n        highlightedIndex = _ref3.highlightedIndex,\n        toggleMenu = _ref3.toggleMenu;\n    return React.createElement(\"div\", {\n      className: cx('c-dropdown-component', (_cx2 = {\n        '-open': isOpen\n      }, _defineProperty(_cx2, \"v-\".concat(variant), variant), _defineProperty(_cx2, \"color-\".concat(color), color), _defineProperty(_cx2, '-read-only', readOnly), _defineProperty(_cx2, \"text-align-\".concat(align), align), _defineProperty(_cx2, '-disabled', isDisabled), _cx2))\n    }, React.createElement(Manager, null, React.createElement(Reference, null, function (p) {\n      return renderButton(_objectSpread({}, p, {\n        getToggleButtonProps: getToggleButtonProps,\n        inputValue: inputValue\n      }));\n    }), React.createElement(Popper, {\n      placement: placement,\n      key: popperForceUpdateKey.current\n    }, function (p) {\n      return renderContent(_objectSpread({}, p, {\n        selectedItem: selectedItem,\n        highlightedIndex: highlightedIndex,\n        getMenuProps: getMenuProps,\n        getItemProps: getItemProps,\n        toggleMenu: toggleMenu\n      }));\n    })));\n  });\n}\n\nDropdown.DEFAULT_MAX_LIST_HEIGHT = 242;\nDropdown.propTypes = {\n  options: PropTypes.array,\n  value: PropTypes.shape({\n    value: PropTypes.any,\n    icon: PropTypes.string,\n    tooltip: PropTypes.string,\n    disabled: PropTypes.bool,\n    label: PropTypes.string.isRequired\n  }),\n  initialValue: PropTypes.shape({\n    value: PropTypes.string,\n    icon: PropTypes.string,\n    tooltip: PropTypes.string,\n    disabled: PropTypes.bool,\n    label: PropTypes.string.isRequired\n  }),\n  onChange: PropTypes.func,\n  size: PropTypes.string,\n  // eslint-disable-line\n  arrowType: PropTypes.string,\n  // eslint-disable-line\n  selectedValueOverride: PropTypes.any,\n  // eslint-disable-line\n  showSelected: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  placement: PropTypes.string,\n  itemToString: PropTypes.func,\n  variant: PropTypes.string,\n  color: PropTypes.string,\n  align: PropTypes.string,\n  weight: PropTypes.string,\n  // eslint-disable-line\n  tooltip: PropTypes.string,\n  // eslint-disable-line\n  children: PropTypes.node,\n  clip: PropTypes.bool,\n  isDisabled: PropTypes.bool\n};\nDropdown.defaultProps = {\n  readOnly: false,\n  showSelected: false,\n  placement: 'bottom-end',\n  size: 'md',\n  color: 'grey',\n  weight: 'bold',\n  clip: true,\n  itemToString: function itemToString(i) {\n    return i && i.label;\n  }\n};\n\nvar _default = React.memo(Dropdown);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n  reactHotLoader.register(_extends, \"_extends\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n  reactHotLoader.register(_slicedToArray, \"_slicedToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n  reactHotLoader.register(_nonIterableRest, \"_nonIterableRest\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n  reactHotLoader.register(_iterableToArrayLimit, \"_iterableToArrayLimit\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n  reactHotLoader.register(_arrayWithHoles, \"_arrayWithHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n  reactHotLoader.register(Dropdown, \"Dropdown\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nDropdown.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Dropdown\",\n  \"props\": {\n    \"readOnly\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showSelected\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placement\": {\n      \"defaultValue\": {\n        \"value\": \"'bottom-end'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'md'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'grey'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"weight\": {\n      \"defaultValue\": {\n        \"value\": \"'bold'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"clip\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"itemToString\": {\n      \"defaultValue\": {\n        \"value\": \"function itemToString(i) {\\n  return i && i.label;\\n}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"value\": {\n            \"name\": \"any\",\n            \"required\": false\n          },\n          \"icon\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"tooltip\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"disabled\": {\n            \"name\": \"bool\",\n            \"required\": false\n          },\n          \"label\": {\n            \"name\": \"string\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"initialValue\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"value\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"icon\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"tooltip\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"disabled\": {\n            \"name\": \"bool\",\n            \"required\": false\n          },\n          \"label\": {\n            \"name\": \"string\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"arrowType\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selectedValueOverride\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"variant\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"align\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tooltip\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDisabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/dropdown/dropdown.component.jsx"],"names":["listItemRef","useRef","listHeight","updateListHeight","useState","useEffect","props","height","optionsLength","Dropdown","newListHeight","popperForceUpdateKey","content","updateContent","newContent","readOnly","item","getItemProps","index","key","disabled","className","cx","highlightedIndex","ref","undefined","tooltip","showSelected","options","optionsToShow","o","selectedItem","renderItem","inputValue","getToggleButtonProps","arrowType","selectedValueOverride","label","size","color","weight","variant","isDisabled","labelProps","profiles","nav","style","placement","getMenuProps","toggleMenu","decoratedChildren","styleToApply","getOptions","value","align","onChange","initialValue","itemToString","isOpen","renderButton","current","renderContent","PropTypes","icon","isRequired","children","clip","bool","i","React"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Downshift from 'downshift';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport DropdownContext from 'react-components/shared/dropdown/dropdown.context';\nimport Text from 'react-components/shared/text';\nimport Heading from 'react-components/shared/heading/heading.component';\nimport Tooltip from 'react-components/shared/help-tooltip/help-tooltip.component';\nimport cx from 'classnames';\nimport './dropdown.scss';\nimport './dropdown-nav.variant.scss';\nimport './dropdown-sentence.variant.scss';\nimport './dropdown-profiles.variant.scss';\n\nfunction Dropdown(props) {\n  const listItemRef = useRef(null);\n  const [listHeight, updateListHeight] = useState(null);\n  useEffect(() => {\n    if (\n      listItemRef.current &&\n      listHeight === null &&\n      props.options &&\n      props.options.length > 0 &&\n      props.clip\n    ) {\n      const { height } = listItemRef.current.getBoundingClientRect();\n      const optionsLength = props.showSelected ? props.options.length : props.options.length - 1;\n      if (height > 0 && height * optionsLength > Dropdown.DEFAULT_MAX_LIST_HEIGHT) {\n        const newListHeight = height * 6 - height / 2;\n        updateListHeight(newListHeight);\n      }\n    }\n  });\n\n  // popper won't detect changes on its children so the necessary recalculations won't happen\n  // we create a key that changes every time the options or children change, that way we remount the popper component\n  const popperForceUpdateKey = useRef(0);\n  const [content, updateContent] = useState(props.options || props.children);\n  useEffect(() => {\n    const newContent = props.options || props.children;\n    if (newContent !== content) {\n      updateContent(newContent);\n      popperForceUpdateKey.current++;\n    }\n  }, [props.options, props.children, content]);\n\n  function renderItem(item, index, highlightedIndex, getItemProps) {\n    const { readOnly } = props;\n    return (\n      <>\n        {item.hasSeparator && <li className=\"dropdow-menu-separator\" />}\n        <li\n          {...getItemProps({\n            item,\n            index,\n            key: item.value,\n            disabled: readOnly || item.isDisabled,\n            className: cx('dropdown-menu-item', {\n              '-with-icon': item.icon,\n              '-disabled': item.isDisabled,\n              '-highlighted': highlightedIndex === index\n            }),\n            ref: index === 0 ? listItemRef : undefined\n          })}\n        >\n          {item.icon && (\n            <svg className={cx('dropdown-menu-item-icon', 'icon', `icon-${item.icon}`)}>\n              <use xlinkHref={`#icon-${item.icon}`} />\n            </svg>\n          )}\n          <Text title={item.label} weight=\"regular\" className=\"item-label\">\n            {item.label}\n          </Text>\n          {item.tooltip && (\n            <Tooltip\n              className=\"dropdown-menu-item-tooltip\"\n              constraint=\"window\"\n              text={item.tooltip}\n            />\n          )}\n        </li>\n      </>\n    );\n  }\n\n  function getOptions(selectedItem, highlightedIndex, getItemProps) {\n    const { showSelected, options } = props;\n    const optionsToShow = showSelected\n      ? options\n      : options.filter(\n          o => o.value !== (selectedItem && selectedItem.value) && o.value !== selectedItem.value\n        );\n\n    return optionsToShow.map((item, i) => renderItem(item, i, highlightedIndex, getItemProps));\n  }\n\n  /* eslint-disable react/prop-types */\n  function renderButton({ ref, inputValue, getToggleButtonProps }) {\n    const {\n      arrowType,\n      selectedValueOverride,\n      label,\n      size,\n      color,\n      tooltip,\n      weight,\n      variant,\n      isDisabled\n    } = props;\n\n    const labelProps =\n      {\n        profiles: { size: 'rg' },\n        nav: { color: 'grey-faded' }\n      }[variant] || {};\n\n    return (\n      <button\n        {...getToggleButtonProps({\n          ref,\n          disabled: isDisabled,\n          className: cx('dropdown-selected-item', { [`-${arrowType}`]: arrowType })\n        })}\n      >\n        <Text\n          as=\"span\"\n          size=\"sm\"\n          variant=\"mono\"\n          color={color}\n          transform=\"uppercase\"\n          {...labelProps}\n          className=\"dropdown-label\"\n        >\n          {label}\n          {tooltip && <Tooltip text={tooltip} constraint=\"window\" />}\n        </Text>\n        <Heading\n          as=\"span\"\n          size={size}\n          weight={weight}\n          color={color}\n          className=\"dropdown-value\"\n          title={inputValue}\n        >\n          {selectedValueOverride || inputValue}\n        </Heading>\n      </button>\n    );\n  }\n\n  function renderContent({\n    ref,\n    style,\n    placement,\n    selectedItem,\n    getItemProps,\n    getMenuProps,\n    highlightedIndex,\n    toggleMenu\n  }) {\n    const decoratedChildren =\n      typeof props.children !== 'undefined' ? (\n        <DropdownContext.Provider\n          value={{ selectedItem, getItemProps, highlightedIndex, toggleMenu }}\n        >\n          {props.children}\n        </DropdownContext.Provider>\n      ) : (\n        undefined\n      );\n    const styleToApply = listHeight ? { ...style, height: listHeight } : style;\n    return (\n      <ul\n        {...getMenuProps({\n          ref,\n          style: styleToApply,\n          'data-placement': placement,\n          className: 'dropdown-menu'\n        })}\n      >\n        {props.options\n          ? getOptions(selectedItem, highlightedIndex, getItemProps)\n          : decoratedChildren}\n      </ul>\n    );\n  }\n  /* eslint-enable react/prop-types */\n\n  const {\n    value,\n    color,\n    align,\n    variant,\n    readOnly,\n    onChange,\n    isDisabled,\n    placement,\n    initialValue,\n    itemToString\n  } = props;\n\n  return (\n    <Downshift\n      initialSelectedItem={initialValue}\n      selectedItem={value}\n      itemToString={itemToString}\n      onChange={onChange}\n    >\n      {({\n        isOpen,\n        getItemProps,\n        selectedItem,\n        getToggleButtonProps,\n        getMenuProps,\n        inputValue,\n        highlightedIndex,\n        toggleMenu\n      }) => (\n        <div\n          className={cx('c-dropdown-component', {\n            '-open': isOpen,\n            [`v-${variant}`]: variant,\n            [`color-${color}`]: color,\n            '-read-only': readOnly,\n            [`text-align-${align}`]: align,\n            '-disabled': isDisabled\n          })}\n        >\n          <Manager>\n            <Reference>{p => renderButton({ ...p, getToggleButtonProps, inputValue })}</Reference>\n            <Popper placement={placement} key={popperForceUpdateKey.current}>\n              {p =>\n                renderContent({\n                  ...p,\n                  selectedItem,\n                  highlightedIndex,\n                  getMenuProps,\n                  getItemProps,\n                  toggleMenu\n                })\n              }\n            </Popper>\n          </Manager>\n        </div>\n      )}\n    </Downshift>\n  );\n}\n\nDropdown.DEFAULT_MAX_LIST_HEIGHT = 242;\n\nDropdown.propTypes = {\n  options: PropTypes.array,\n  value: PropTypes.shape({\n    value: PropTypes.any,\n    icon: PropTypes.string,\n    tooltip: PropTypes.string,\n    disabled: PropTypes.bool,\n    label: PropTypes.string.isRequired\n  }),\n  initialValue: PropTypes.shape({\n    value: PropTypes.string,\n    icon: PropTypes.string,\n    tooltip: PropTypes.string,\n    disabled: PropTypes.bool,\n    label: PropTypes.string.isRequired\n  }),\n  onChange: PropTypes.func,\n  size: PropTypes.string, // eslint-disable-line\n  arrowType: PropTypes.string, // eslint-disable-line\n  selectedValueOverride: PropTypes.any, // eslint-disable-line\n  showSelected: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  placement: PropTypes.string,\n  itemToString: PropTypes.func,\n  variant: PropTypes.string,\n  color: PropTypes.string,\n  align: PropTypes.string,\n  weight: PropTypes.string, // eslint-disable-line\n  tooltip: PropTypes.string, // eslint-disable-line\n  children: PropTypes.node,\n  clip: PropTypes.bool,\n  isDisabled: PropTypes.bool\n};\n\nDropdown.defaultProps = {\n  readOnly: false,\n  showSelected: false,\n  placement: 'bottom-end',\n  size: 'md',\n  color: 'grey',\n  weight: 'bold',\n  clip: true,\n  itemToString: i => i && i.label\n};\n\nexport default React.memo(Dropdown);\n"]}]}